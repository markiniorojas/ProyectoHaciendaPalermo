// <auto-generated />
using System;
using Entity.context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entity.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250519125828_AddSeedData")]
    partial class AddSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entity.Model.Form", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("form", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Formulario principal del sistema",
                            IsDeleted = false,
                            Name = "Formulario Principal",
                            Url = "/dashboard"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Formulario para administración de usuarios",
                            IsDeleted = false,
                            Name = "Gestión de Usuarios",
                            Url = "/usuarios"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Formulario para visualizar reportes",
                            IsDeleted = false,
                            Name = "Reportes",
                            Url = "/reportes"
                        });
                });

            modelBuilder.Entity("Entity.Model.FormModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.HasIndex("ModuleId");

                    b.ToTable("formModule", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FormId = 1,
                            IsDeleted = false,
                            ModuleId = 1
                        },
                        new
                        {
                            Id = 2,
                            FormId = 2,
                            IsDeleted = false,
                            ModuleId = 1
                        },
                        new
                        {
                            Id = 3,
                            FormId = 2,
                            IsDeleted = false,
                            ModuleId = 2
                        });
                });

            modelBuilder.Entity("Entity.Model.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("module", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Módulo de administración general",
                            IsDeleted = false,
                            Name = "Administración"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Control y mantenimiento de usuarios",
                            IsDeleted = false,
                            Name = "Gestión de usuarios"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Visualización y exportación de reportes",
                            IsDeleted = false,
                            Name = "Reportes"
                        });
                });

            modelBuilder.Entity("Entity.Model.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("permission", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Permite crear registros",
                            IsDeleted = false,
                            Name = "Crear"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Permite editar registros",
                            IsDeleted = false,
                            Name = "Editar"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Permite eliminar registros",
                            IsDeleted = false,
                            Name = "Eliminar"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Permite ver registros",
                            IsDeleted = false,
                            Name = "Ver"
                        });
                });

            modelBuilder.Entity("Entity.Model.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateBorn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Eps")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RelatedPerson")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("person", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateBorn = new DateTime(1990, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "1075455",
                            DocumentType = "TI",
                            Eps = "Nueva EPS",
                            FirstName = "Marcos",
                            Genero = "Masculino",
                            IsDeleted = false,
                            LastName = "Rojas Alvarez",
                            PhoneNumber = "30012345",
                            RelatedPerson = false
                        },
                        new
                        {
                            Id = 2,
                            DateBorn = new DateTime(1965, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Document = "121243333",
                            DocumentType = "CC",
                            Eps = "Sura",
                            FirstName = "Gentil",
                            Genero = "Masculino",
                            IsDeleted = false,
                            LastName = "Rojas Cortes",
                            PhoneNumber = "30198763",
                            RelatedPerson = true
                        });
                });

            modelBuilder.Entity("Entity.Model.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("rol", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Rol con todos los permisos del sistema",
                            IsDeleted = false,
                            Name = "Administrador"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Rol con permisos limitados",
                            IsDeleted = false,
                            Name = "Usuario"
                        });
                });

            modelBuilder.Entity("Entity.Model.RolFormPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RolId");

                    b.ToTable("rolFormPermission", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FormId = 1,
                            IsDeleted = false,
                            PermissionId = 1,
                            RolId = 1
                        },
                        new
                        {
                            Id = 2,
                            FormId = 1,
                            IsDeleted = false,
                            PermissionId = 2,
                            RolId = 1
                        },
                        new
                        {
                            Id = 3,
                            FormId = 2,
                            IsDeleted = false,
                            PermissionId = 4,
                            RolId = 2
                        });
                });

            modelBuilder.Entity("Entity.Model.RolUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.HasIndex("UserId");

                    b.ToTable("rolUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "marcosrojasalvarez09172007@gmail.com",
                            IsDeleted = false,
                            RolId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "gentilrojas@gmail.com",
                            IsDeleted = false,
                            RolId = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Entity.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("user", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Email = "marcosrojasalvarez09172007@gmail.com",
                            IsDeleted = false,
                            Password = "1234",
                            PersonId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Email = "gentilrojas@gmail.com",
                            IsDeleted = false,
                            Password = "123",
                            PersonId = 2
                        });
                });

            modelBuilder.Entity("Entity.Model.FormModule", b =>
                {
                    b.HasOne("Entity.Model.Form", "Form")
                        .WithMany("FormModules")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Model.Module", "Module")
                        .WithMany("FormModule")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("Entity.Model.RolFormPermission", b =>
                {
                    b.HasOne("Entity.Model.Form", "Form")
                        .WithMany("RolFormPermission")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Model.Permission", "Permission")
                        .WithMany("RolFormPermission")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Model.Rol", "Rol")
                        .WithMany("RolFormPermission")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");

                    b.Navigation("Permission");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Entity.Model.RolUser", b =>
                {
                    b.HasOne("Entity.Model.Rol", "Rol")
                        .WithMany("RolUsers")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entity.Model.User", "User")
                        .WithMany("RolUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entity.Model.User", b =>
                {
                    b.HasOne("Entity.Model.Person", "Person")
                        .WithMany("Users")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Entity.Model.Form", b =>
                {
                    b.Navigation("FormModules");

                    b.Navigation("RolFormPermission");
                });

            modelBuilder.Entity("Entity.Model.Module", b =>
                {
                    b.Navigation("FormModule");
                });

            modelBuilder.Entity("Entity.Model.Permission", b =>
                {
                    b.Navigation("RolFormPermission");
                });

            modelBuilder.Entity("Entity.Model.Person", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Entity.Model.Rol", b =>
                {
                    b.Navigation("RolFormPermission");

                    b.Navigation("RolUsers");
                });

            modelBuilder.Entity("Entity.Model.User", b =>
                {
                    b.Navigation("RolUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
